// Generated by Dagger (https://google.github.io/dagger).
package com.example.beach.features.viewmodel;

import com.example.beach.features.repository.HotelRepo;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class HotelViewModel_Factory implements Factory<HotelViewModel> {
  private final Provider<HotelRepo> repoProvider;

  public HotelViewModel_Factory(Provider<HotelRepo> repoProvider) {
    this.repoProvider = repoProvider;
  }

  @Override
  public HotelViewModel get() {
    return provideInstance(repoProvider);
  }

  public static HotelViewModel provideInstance(Provider<HotelRepo> repoProvider) {
    return new HotelViewModel(repoProvider.get());
  }

  public static HotelViewModel_Factory create(Provider<HotelRepo> repoProvider) {
    return new HotelViewModel_Factory(repoProvider);
  }

  public static HotelViewModel newHotelViewModel(HotelRepo repo) {
    return new HotelViewModel(repo);
  }
}
