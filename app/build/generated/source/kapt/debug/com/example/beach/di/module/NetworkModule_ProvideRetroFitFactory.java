// Generated by Dagger (https://google.github.io/dagger).
package com.example.beach.di.module;

import com.google.gson.Gson;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

public final class NetworkModule_ProvideRetroFitFactory implements Factory<Retrofit> {
  private final NetworkModule module;

  private final Provider<Gson> gsonProvider;

  private final Provider<String> baseUrlProvider;

  public NetworkModule_ProvideRetroFitFactory(
      NetworkModule module, Provider<Gson> gsonProvider, Provider<String> baseUrlProvider) {
    this.module = module;
    this.gsonProvider = gsonProvider;
    this.baseUrlProvider = baseUrlProvider;
  }

  @Override
  public Retrofit get() {
    return provideInstance(module, gsonProvider, baseUrlProvider);
  }

  public static Retrofit provideInstance(
      NetworkModule module, Provider<Gson> gsonProvider, Provider<String> baseUrlProvider) {
    return proxyProvideRetroFit(module, gsonProvider.get(), baseUrlProvider.get());
  }

  public static NetworkModule_ProvideRetroFitFactory create(
      NetworkModule module, Provider<Gson> gsonProvider, Provider<String> baseUrlProvider) {
    return new NetworkModule_ProvideRetroFitFactory(module, gsonProvider, baseUrlProvider);
  }

  public static Retrofit proxyProvideRetroFit(NetworkModule instance, Gson gson, String baseUrl) {
    return Preconditions.checkNotNull(
        instance.provideRetroFit(gson, baseUrl),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
