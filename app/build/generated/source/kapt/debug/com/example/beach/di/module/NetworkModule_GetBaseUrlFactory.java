// Generated by Dagger (https://google.github.io/dagger).
package com.example.beach.di.module;

import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class NetworkModule_GetBaseUrlFactory implements Factory<String> {
  private final NetworkModule module;

  public NetworkModule_GetBaseUrlFactory(NetworkModule module) {
    this.module = module;
  }

  @Override
  public String get() {
    return provideInstance(module);
  }

  public static String provideInstance(NetworkModule module) {
    return proxyGetBaseUrl(module);
  }

  public static NetworkModule_GetBaseUrlFactory create(NetworkModule module) {
    return new NetworkModule_GetBaseUrlFactory(module);
  }

  public static String proxyGetBaseUrl(NetworkModule instance) {
    return Preconditions.checkNotNull(
        instance.getBaseUrl(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
