// Generated by Dagger (https://google.github.io/dagger).
package com.example.beach.features.viewmodel;

import com.example.beach.features.repository.FlightRepo;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class FlightViewModel_Factory implements Factory<FlightViewModel> {
  private final Provider<FlightRepo> repoProvider;

  public FlightViewModel_Factory(Provider<FlightRepo> repoProvider) {
    this.repoProvider = repoProvider;
  }

  @Override
  public FlightViewModel get() {
    return provideInstance(repoProvider);
  }

  public static FlightViewModel provideInstance(Provider<FlightRepo> repoProvider) {
    return new FlightViewModel(repoProvider.get());
  }

  public static FlightViewModel_Factory create(Provider<FlightRepo> repoProvider) {
    return new FlightViewModel_Factory(repoProvider);
  }

  public static FlightViewModel newFlightViewModel(FlightRepo repo) {
    return new FlightViewModel(repo);
  }
}
