// Generated by data binding compiler. Do not edit!
package com.example.beach.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.example.beach.R;
import com.example.beach.features.model.Flight;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FlightItemRecyclerBinding extends ViewDataBinding {
  @NonNull
  public final TextView arrival;

  @NonNull
  public final TextView arrivalAirPort;

  @NonNull
  public final TextView arrivalDate;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final TextView departure;

  @NonNull
  public final TextView departureAirPort;

  @NonNull
  public final TextView departuredate;

  @NonNull
  public final TextView flightName;

  @NonNull
  public final TextView from;

  @NonNull
  public final View myRectangleView;

  @NonNull
  public final TextView price;

  @NonNull
  public final TextView to;

  @Bindable
  protected Flight mFlight;

  protected FlightItemRecyclerBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView arrival, TextView arrivalAirPort, TextView arrivalDate, CardView cardView,
      TextView departure, TextView departureAirPort, TextView departuredate, TextView flightName,
      TextView from, View myRectangleView, TextView price, TextView to) {
    super(_bindingComponent, _root, _localFieldCount);
    this.arrival = arrival;
    this.arrivalAirPort = arrivalAirPort;
    this.arrivalDate = arrivalDate;
    this.cardView = cardView;
    this.departure = departure;
    this.departureAirPort = departureAirPort;
    this.departuredate = departuredate;
    this.flightName = flightName;
    this.from = from;
    this.myRectangleView = myRectangleView;
    this.price = price;
    this.to = to;
  }

  public abstract void setFlight(@Nullable Flight flight);

  @Nullable
  public Flight getFlight() {
    return mFlight;
  }

  @NonNull
  public static FlightItemRecyclerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.flight_item_recycler, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FlightItemRecyclerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FlightItemRecyclerBinding>inflateInternal(inflater, R.layout.flight_item_recycler, root, attachToRoot, component);
  }

  @NonNull
  public static FlightItemRecyclerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.flight_item_recycler, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FlightItemRecyclerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FlightItemRecyclerBinding>inflateInternal(inflater, R.layout.flight_item_recycler, null, false, component);
  }

  public static FlightItemRecyclerBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FlightItemRecyclerBinding bind(@NonNull View view, @Nullable Object component) {
    return (FlightItemRecyclerBinding)bind(component, view, R.layout.flight_item_recycler);
  }
}
